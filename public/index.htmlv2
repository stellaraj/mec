<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>College Chat</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.2/socket.io.min.js"></script>
    <style>
        :root {
            --dark-bg: #1a1a1a;
            --darker-bg: #121212;
            --chat-blue: #2563eb;
            --text-light: #ffffff;
            --text-gray: #a0aec0;
            --input-bg: #2d2d2d;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: var(--dark-bg);
            color: var(--text-light);
            height: 100vh;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            height: 100vh;
            display: flex;
            flex-direction: column;
        }

        #login-form {
            background: var(--darker-bg);
            padding: 2rem;
            border-radius: 8px;
            max-width: 400px;
            margin: auto;
            width: 90%;
        }

        #chat-container {
            display: none;
            flex-direction: column;
            height: 100vh;
        }

        .header {
            background: var(--darker-bg);
            padding: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid #333;
        }

        .online-count {
            color: var(--chat-blue);
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .message {
            max-width: 70%;
            padding: 0.8rem;
            border-radius: 12px;
            margin: 0.5rem 0;
            word-wrap: break-word;
        }

        .message.sent {
            background: var(--chat-blue);
            color: white;
            align-self: flex-end;
            border-bottom-right-radius: 4px;
        }

        .message.received {
            background: var(--input-bg);
            color: white;
            align-self: flex-start;
            border-bottom-left-radius: 4px;
        }

        .input-container {
            background: var(--darker-bg);
            padding: 1rem;
            display: flex;
            gap: 0.5rem;
        }

        input {
            width: 100%;
            padding: 0.8rem;
            border: none;
            border-radius: 6px;
            background: var(--input-bg);
            color: var(--text-light);
        }

        button {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 6px;
            background: var(--chat-blue);
            color: white;
            cursor: pointer;
            transition: opacity 0.2s;
        }

        button:hover {
            opacity: 0.9;
        }

        .timestamp {
            font-size: 0.7rem;
            opacity: 0.7;
            margin-top: 0.3rem;
        }

        #status {
            text-align: center;
            color: var(--text-gray);
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        #new-chat-btn {
            background: #374151;
        }

        @media (max-width: 768px) {
            .message {
                max-width: 85%;
            }
            
            .input-container {
                padding: 0.8rem;
            }
            
            button {
                padding: 0.8rem 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div id="login-form">
            <h2 style="margin-bottom: 1rem; text-align: center;">College Chat</h2>
            <input type="email" id="email" placeholder="College Email" style="margin-bottom: 1rem;">
            <input type="text" id="username" placeholder="Username" style="margin-bottom: 1rem;">
            <button onclick="register()" style="width: 100%">Join Chat</button>
        </div>

        <div id="chat-container">
            <div class="header">
                <span class="online-count">Online Users: <span id="online-count">0</span></span>
                <span id="status">Connecting...</span>
            </div>
            
            <div id="chat-messages" class="chat-messages"></div>
            
            <div class="input-container">
                <button id="new-chat-btn" onclick="findNewChat()">New Chat</button>
                <input type="text" id="message-input" placeholder="Type a message...">
                <button onclick="sendMessage()">Send</button>
            </div>
        </div>
    </div>

    <script>
        const socket = io(); // Replace with your backend URL
        let currentRoomId = null;

        function register() {
            const email = document.getElementById('email').value;
            const username = document.getElementById('username').value;
            
            if (!email || !username) {
                alert('Please fill in all fields');
                return;
            }

            socket.emit('register', { collegeEmail: email, username });
        }

        function findNewChat() {
            document.getElementById('chat-messages').innerHTML = '';
            document.getElementById('status').textContent = 'Finding a chat partner...';
            socket.emit('findChat');
        }

        function sendMessage() {
            const input = document.getElementById('message-input');
            const message = input.value.trim();
            
            if (message && currentRoomId) {
                socket.emit('message', { roomId: currentRoomId, message });
                input.value = '';
            }
        }

        socket.on('registerSuccess', (data) => {
            document.getElementById('login-form').style.display = 'none';
            document.getElementById('chat-container').style.display = 'flex';
            findNewChat();
        });

        socket.on('onlineUsers', (count) => {
            document.getElementById('online-count').textContent = count;
        });

        socket.on('waiting', () => {
            document.getElementById('status').textContent = 'Waiting for a chat partner...';
        });

        socket.on('chatStarted', (data) => {
            currentRoomId = data.roomId;
            document.getElementById('status').textContent = 'Connected to chat';
        });

        socket.on('message', (data) => {
            const messagesDiv = document.getElementById('chat-messages');
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('message');
            messageDiv.classList.add(data.userId === socket.id ? 'sent' : 'received');
            
            const messageText = document.createElement('div');
            messageText.textContent = data.message;
            
            const timestamp = document.createElement('div');
            timestamp.classList.add('timestamp');
            timestamp.textContent = new Date(data.timestamp).toLocaleTimeString();
            
            messageDiv.appendChild(messageText);
            messageDiv.appendChild(timestamp);
            messagesDiv.appendChild(messageDiv);
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        });

        socket.on('partnerDisconnected', () => {
            document.getElementById('status').textContent = 'Partner disconnected. Start new chat.';
        });

        socket.on('error', (message) => {
            alert(message);
        });

        // Handle enter key in message input
        document.getElementById('message-input').addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });
    </script>
</body>
</html>
